# Frontend-only Docker build for MCP Memory WebUI
# Optimized for frontend development and testing

# Stage 1: Build the Next.js frontend
FROM node:20-alpine AS builder

# Set working directory
WORKDIR /frontend

# Copy package files
COPY web-ui/package.json ./
COPY web-ui/package-lock.json ./

# Install dependencies (include dev dependencies for build)
RUN npm ci

# Copy frontend source
COPY web-ui/ ./

# Set build environment variables
ENV NEXT_TELEMETRY_DISABLED=1
ENV NODE_ENV=production

# Build arguments for runtime URLs
ARG NEXT_PUBLIC_API_URL=http://localhost:9080
ARG NEXT_PUBLIC_GRAPHQL_URL=http://localhost:9080/graphql
ARG NEXT_PUBLIC_WS_URL=ws://localhost:9080/ws

# Set environment variables for Next.js build
ENV NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
ENV NEXT_PUBLIC_GRAPHQL_URL=${NEXT_PUBLIC_GRAPHQL_URL}
ENV NEXT_PUBLIC_WS_URL=${NEXT_PUBLIC_WS_URL}

# Build the frontend
RUN npm run build

# Stage 2: Production runtime
FROM node:20-alpine

# Install runtime dependencies
RUN apk add --no-cache \
    ca-certificates \
    curl \
    wget \
    tzdata \
    && update-ca-certificates

# Create non-root user
RUN addgroup -g 1001 -S mcpuser && \
    adduser -u 1001 -S mcpuser -G mcpuser

# Set working directory
WORKDIR /app

# Copy Next.js build from builder stage
COPY --from=builder --chown=mcpuser:mcpuser /frontend/.next/standalone ./
COPY --from=builder --chown=mcpuser:mcpuser /frontend/.next/static ./.next/static
COPY --from=builder --chown=mcpuser:mcpuser /frontend/public ./public

# Switch to non-root user
USER mcpuser

# Expose port
EXPOSE 3000

# Set labels following OCI standards
LABEL \
    org.opencontainers.image.title="MCP Memory WebUI" \
    org.opencontainers.image.description="Web interface for MCP Memory Server" \
    org.opencontainers.image.version="VERSION_PLACEHOLDER" \
    org.opencontainers.image.vendor="fredcamaral" \
    org.opencontainers.image.licenses="Apache-2.0" \
    org.opencontainers.image.source="https://github.com/LerianStudio/lerian-mcp-memory"

# Set environment variables
ENV NODE_ENV=production
ENV HOSTNAME=0.0.0.0
ENV PORT=3000

# Start the frontend server
CMD ["node", "server.js"]