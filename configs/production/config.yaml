# Claude Vector Memory MCP Server - Production Configuration

server:
  host: "0.0.0.0"
  port: 8080
  read_timeout: 30s
  write_timeout: 30s
  idle_timeout: 120s
  max_header_bytes: 1048576

health:
  enabled: true
  port: 8081
  path: "/health"
  checks:
    - name: "database"
      enabled: true
      timeout: 5s
    - name: "vector_storage"
      enabled: true
      timeout: 5s
    - name: "redis"
      enabled: true
      timeout: 3s

metrics:
  enabled: true
  port: 8082
  path: "/metrics"
  interval: 30s

logging:
  level: "warn"
  format: "json"
  output: "stdout"
  structured: true
  fields:
    service: "lerian-mcp-memory-server"
    version: "VERSION_PLACEHOLDER"
    environment: "production"

storage:
  type: "postgres"
  postgres:
    host: "${MCP_DB_HOST}"
    port: 5432
    database: "${MCP_DB_NAME}"
    username: "${MCP_DB_USER}"
    password: "${MCP_DB_PASSWORD}"
    ssl_mode: "require"
    max_connections: 50
    max_idle_connections: 25
    connection_max_lifetime: 600s

vector:
  engine: "faiss"
  dimension: 1536
  index_type: "IVF"
  nlist: 1000
  nprobe: 50
  distance_metric: "cosine"
  cache_size: 10000
  persist_path: "/app/data/vectors"

memory:
  conversation_history_limit: 1000
  max_memory_entries: 100000
  cleanup_interval: 1h
  retention_policy:
    default_ttl: 720h  # 30 days
    max_ttl: 8760h     # 365 days

intelligence:
  pattern_recognition:
    enabled: true
    min_pattern_frequency: 5
    max_patterns: 50000
    similarity_threshold: 0.85
  
  knowledge_graph:
    enabled: true
    max_entities: 100000
    max_relationships: 500000
    relationship_threshold: 0.75
  
  context_suggestion:
    enabled: true
    max_suggestions: 10
    relevance_threshold: 0.7
    temporal_weight: 0.3
  
  learning:
    enabled: true
    feedback_weight: 0.1
    adaptation_rate: 0.05

caching:
  memory:
    enabled: true
    type: "lru"
    size: 10000
    ttl: 1h
  
  query:
    enabled: true
    type: "lfu"
    size: 5000
    ttl: 30m
  
  vector:
    enabled: true
    type: "fifo"
    size: 1000
    ttl: 15m
  
  redis:
    enabled: true
    host: "${MCP_REDIS_HOST}"
    port: 6379
    password: "${MCP_REDIS_PASSWORD}"
    db: 0
    pool_size: 20
    max_retries: 3
    retry_backoff: 100ms

security:
  encryption:
    enabled: true
    algorithm: "aes-gcm"
    key_derivation: "pbkdf2"
    iterations: 100000
    key_source: "env"
    master_key_env: "MCP_MASTER_KEY"
  
  access_control:
    enabled: true
    default_permissions: ["read"]
    session_timeout: 24h
    max_sessions_per_user: 10
    token_secret: "${MCP_TOKEN_SECRET}"
  
  rate_limiting:
    enabled: true
    requests_per_minute: 60
    burst_size: 10
    distributed: true

backup:
  enabled: true
  interval: 24h
  retention_days: 90
  compression: true
  encryption: true
  path: "/app/backups"
  s3:
    enabled: true
    bucket: "${MCP_BACKUP_BUCKET}"
    region: "${AWS_REGION}"
    access_key: "${AWS_ACCESS_KEY_ID}"
    secret_key: "${AWS_SECRET_ACCESS_KEY}"

monitoring:
  enabled: true
  interval: 30s
  alerts:
    memory_threshold: 85
    cpu_threshold: 80
    disk_threshold: 90
    error_rate_threshold: 1
    response_time_threshold: 5000ms
  
  external:
    prometheus:
      enabled: true
      push_gateway: "${MCP_PROMETHEUS_PUSH_GATEWAY}"
    
    datadog:
      enabled: false
      api_key: "${DATADOG_API_KEY}"
    
    new_relic:
      enabled: false
      license_key: "${NEW_RELIC_LICENSE_KEY}"

performance:
  max_concurrent_requests: 1000
  request_timeout: 30s
  batch_size: 1000
  worker_pool_size: 50
  memory_limit: "2GB"
  gc_target_percentage: 100

development:
  debug: false
  profiling: false
  cors:
    enabled: true
    allowed_origins: ["${MCP_ALLOWED_ORIGIN}"]
    allowed_methods: ["GET", "POST", "PUT", "DELETE"]
    allowed_headers: ["Authorization", "Content-Type"]