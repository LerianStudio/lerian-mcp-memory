# Production configuration for MCP Memory Server
server:
  host: "0.0.0.0"
  port: 9080
  read_timeout: "30s"
  write_timeout: "30s"
  idle_timeout: "120s"
  shutdown_timeout: "30s"
  max_header_bytes: 1048576
  
  # TLS Configuration (if using direct HTTPS)
  tls:
    enabled: false
    cert_file: "/app/ssl/server.crt"
    key_file: "/app/ssl/server.key"
    min_version: "1.2"
    max_version: "1.3"

# Database configuration  
database:
  host: "postgres"
  port: 5432
  database: "mcp_memory"
  username: "mcp_user" 
  password: "${POSTGRES_PASSWORD}"
  sslmode: "require"
  
  # Connection pooling
  max_connections: 25
  max_idle_connections: 5
  connection_max_lifetime: "5m"
  connection_max_idle_time: "1m"
  
  # Performance tuning
  statement_timeout: "30s"
  lock_timeout: "10s"
  idle_in_transaction_session_timeout: "60s"
  
  # Backup configuration
  backup:
    enabled: true
    interval: "6h"
    retention_days: 30
    s3_bucket: "${BACKUP_S3_BUCKET}"
    s3_prefix: "mcp-memory/postgres"

# Vector database configuration
vector_store:
  type: "qdrant"
  url: "http://qdrant:6333"
  api_key: "${QDRANT_API_KEY}"
  timeout: "30s"
  max_retries: 3
  collection_name: "mcp_memory_vectors"
  vector_size: 1536
  distance: "cosine"
  
  # Performance configuration
  batch_size: 100
  parallel_requests: 4
  index_threshold: 10000
  
  # Replication (if using Qdrant cluster)
  replication:
    enabled: false
    factor: 2

# AI service configuration
ai_service:
  provider: "openai"
  api_key: "${OPENAI_API_KEY}"
  model: "text-embedding-ada-002"
  max_tokens: 8192
  timeout: "30s"
  max_retries: 3
  retry_delay: "1s"
  
  # Rate limiting
  rate_limit:
    requests_per_minute: 1000
    requests_per_hour: 50000
  
  # Circuit breaker
  circuit_breaker:
    enabled: true
    threshold: 10
    timeout: "60s"
    max_requests: 100

# Memory management
memory:
  chunk_size: 2048
  overlap_size: 200
  max_chunks_per_operation: 1000
  similarity_threshold: 0.7
  max_search_results: 100
  
  # Decay configuration
  decay:
    enabled: true
    half_life: "30d"
    min_relevance: 0.1
    cleanup_interval: "24h"
  
  # Analytics
  analytics:
    enabled: true
    sampling_rate: 0.1
    retention_days: 90

# Security configuration
security:
  jwt:
    secret: "${JWT_SECRET}"
    expiration: "24h"
    algorithm: "HS256"
    
  api_key:
    enabled: true
    salt: "${API_KEY_SALT}"
    length: 32
    
  encryption:
    key: "${ENCRYPTION_KEY}"
    algorithm: "AES-256-GCM"
    
  rate_limiting:
    enabled: true
    requests_per_minute: 1000
    burst: 100
    
  cors:
    enabled: true
    allowed_origins:
      - "https://app.mcp-memory.com"
      - "https://dashboard.mcp-memory.com"
    allowed_methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
    allowed_headers: ["Authorization", "Content-Type", "X-API-Key"]
    max_age: 86400

# Caching configuration
cache:
  type: "redis"
  url: "redis://redis:6379"
  password: "${REDIS_PASSWORD}"
  database: 0
  max_connections: 10
  
  # TTL settings
  default_ttl: "5m"
  query_ttl: "10m"
  embedding_ttl: "1h"
  
  # Memory cache fallback
  memory:
    enabled: true
    max_size: "100MB"
    ttl: "1m"

# Logging configuration
logging:
  level: "info"
  format: "json"
  output: "stdout"
  
  # File logging
  file:
    enabled: true
    path: "/app/logs/mcp-memory.log"
    max_size: "100MB"
    max_backups: 5
    max_age: 30
    compress: true
  
  # Structured logging
  fields:
    service: "mcp-memory-server"
    version: "1.0.0"
    environment: "production"

# Metrics configuration
metrics:
  enabled: true
  port: 9090
  path: "/metrics"
  
  # Prometheus configuration
  prometheus:
    enabled: true
    namespace: "mcp_memory"
    subsystem: "server"
  
  # Custom metrics
  custom:
    - name: "memory_operations_total"
      type: "counter"
      help: "Total number of memory operations"
    - name: "query_duration_seconds"
      type: "histogram"
      help: "Query execution duration"
    - name: "active_connections"
      type: "gauge"
      help: "Number of active connections"

# Health check configuration
health:
  enabled: true
  port: 9080
  path: "/health"
  interval: "30s"
  timeout: "10s"
  
  # Component health checks
  checks:
    database:
      enabled: true
      timeout: "5s"
      query: "SELECT 1"
    vector_store:
      enabled: true
      timeout: "5s"
    ai_service:
      enabled: true
      timeout: "10s"
    cache:
      enabled: true
      timeout: "3s"

# Tracing configuration
tracing:
  enabled: true
  provider: "jaeger"
  endpoint: "http://jaeger:14268/api/traces"
  service_name: "mcp-memory-server"
  sampling_rate: 0.1
  
  # Trace exporters
  exporters:
    jaeger:
      enabled: true
      agent_endpoint: "jaeger:6831"
    console:
      enabled: false

# Feature flags
features:
  advanced_analytics: true
  memory_compression: true
  distributed_caching: true
  auto_scaling: false
  real_time_sync: true
  
# Environment-specific overrides
environment:
  name: "production"
  region: "${AWS_REGION:-us-west-2}"
  availability_zone: "${AWS_AZ:-us-west-2a}"
  
# Resource limits
resources:
  max_concurrent_requests: 100
  max_memory_usage: "3GB"
  max_cpu_usage: "80%"
  max_disk_usage: "80%"