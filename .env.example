# Lerian MCP Memory Server - Configuration
# Copy this file to .env and update the values as needed
# 
# This file contains ONLY environment variables actually used in the codebase
# Variables are organized by functionality and implementation status

# ================================================================
# REQUIRED - API & EMBEDDING SERVICES
# ================================================================

# OpenAI Configuration (Required for embeddings and AI features)
OPENAI_API_KEY=${OPENAI_API_KEY:-your_openai_api_key_here}
OPENAI_EMBEDDING_MODEL=text-embedding-ada-002
OPENAI_MODEL=gpt-4o
OPENAI_BASE_URL=https://api.openai.com/v1

# OpenAI Advanced Settings
MCP_MEMORY_OPENAI_MAX_TOKENS=8191
MCP_MEMORY_OPENAI_TEMPERATURE=0.0
MCP_MEMORY_OPENAI_REQUEST_TIMEOUT_SECONDS=60
MCP_MEMORY_OPENAI_RATE_LIMIT_RPM=60

# ================================================================
# AI PROVIDER CONFIGURATION
# ================================================================

# Primary AI Provider Selection (auto-detects based on available API keys if not set)
AI_PROVIDER=openai                    # Options: openai, claude, perplexity, mock

# Generic AI configuration (fallback for all providers)
AI_API_KEY=${OPENAI_API_KEY}          # Fallback API key if provider-specific key not set
AI_BASE_URL=                          # Custom base URL override (optional)

# Claude/Anthropic Configuration
CLAUDE_API_KEY=your_claude_api_key_here
CLAUDE_BASE_URL=https://api.anthropic.com
CLAUDE_MODEL=claude-sonnet-4

# Alternative Claude API key name (some setups use this)
ANTHROPIC_API_KEY=${CLAUDE_API_KEY}

# Perplexity Configuration  
PERPLEXITY_API_KEY=your_perplexity_api_key_here
PERPLEXITY_BASE_URL=https://api.perplexity.ai
PERPLEXITY_MODEL=sonar-pro

# ================================================================
# SERVER CONFIGURATION
# ================================================================

# Server host and ports (internal application configuration)
MCP_MEMORY_HOST=localhost
MCP_MEMORY_PORT=9080
MCP_MEMORY_READ_TIMEOUT_SECONDS=30
MCP_MEMORY_WRITE_TIMEOUT_SECONDS=30

# Logging Configuration
MCP_MEMORY_LOG_LEVEL=info             # Options: debug, info, warn, error
MCP_MEMORY_LOG_FILE=/app/logs/mcp-memory.log
MCP_MEMORY_LOG_FORMAT=json            # Options: json, text
MCP_MEMORY_LOG_MAX_SIZE_MB=100
MCP_MEMORY_LOG_MAX_BACKUPS=3
MCP_MEMORY_LOG_MAX_AGE_DAYS=30

# ================================================================
# DATABASE CONFIGURATION
# ================================================================

# Primary Database URL (takes precedence if set)
DATABASE_URL=postgresql://postgres:postgres@localhost:5432/lerian_mcp_memory?sslmode=disable

# Individual Database Settings (used if DATABASE_URL not set)
DB_HOST=localhost
DB_PORT=5432
DB_NAME=lerian_mcp_memory
DB_USER=postgres
DB_PASSWORD=postgres
DB_SSLMODE=disable
DB_MAX_OPEN_CONNS=25
DB_MAX_IDLE_CONNS=5

# Database Performance Tuning
DB_CONN_MAX_IDLE_TIME=15m
DB_CONN_MAX_LIFETIME=1h
DB_MIGRATION_TIMEOUT=300s
DB_QUERY_TIMEOUT=30s
DB_SLOW_QUERY_THRESHOLD=1s

# Alternative PostgreSQL Configuration (some environments use this)
POSTGRES_HOST=${DB_HOST}
POSTGRES_PORT=${DB_PORT}
POSTGRES_USER=${DB_USER}
POSTGRES_PASSWORD=${DB_PASSWORD}
POSTGRES_DB=${DB_NAME}
POSTGRES_SSLMODE=${DB_SSLMODE}

# ================================================================
# VECTOR DATABASE (QDRANT)
# ================================================================

# Qdrant Configuration (actual variable names used in code)
MCP_MEMORY_QDRANT_HOST=localhost
MCP_MEMORY_QDRANT_PORT=6333
MCP_MEMORY_QDRANT_COLLECTION=claude_memory

# Qdrant Docker Integration
MCP_MEMORY_QDRANT_DOCKER_ENABLED=true
MCP_MEMORY_QDRANT_IMAGE=qdrant/qdrant:latest
QDRANT_CONTAINER_NAME=qdrant
QDRANT_VOLUME_PATH=./data/qdrant

# ================================================================
# STORAGE & BACKUP CONFIGURATION
# ================================================================

# Storage Provider Configuration
MCP_MEMORY_STORAGE_PROVIDER=qdrant
RETENTION_DAYS=90

# Backup Configuration
MCP_MEMORY_BACKUP_ENABLED=true
MCP_MEMORY_BACKUP_INTERVAL_HOURS=24
MCP_MEMORY_BACKUP_DIRECTORY=/app/backups

# Audit Logging
MCP_MEMORY_AUDIT_DIRECTORY=/app/audit_logs

# ================================================================
# CONTENT PROCESSING & CHUNKING
# ================================================================

# Smart Chunking Configuration
MCP_MEMORY_CHUNKING_STRATEGY=semantic
MCP_MEMORY_CHUNKING_MAX_LENGTH=8000
MCP_MEMORY_CHUNKING_MIN_LENGTH=100
MCP_MEMORY_CHUNKING_TODO_TRIGGER="decided|fixed|solved|bug|issue"

# ================================================================
# WEBSOCKET CONFIGURATION
# ================================================================

# WebSocket Server Settings
WS_MAX_CONNECTIONS=100
WS_READ_BUFFER_SIZE=1024
WS_WRITE_BUFFER_SIZE=1024
WS_HANDSHAKE_TIMEOUT=10
WS_PING_INTERVAL=54
WS_PONG_TIMEOUT=60
WS_WRITE_TIMEOUT=10
WS_READ_TIMEOUT=60
WS_ENABLE_COMPRESSION=true
WS_MAX_MESSAGE_SIZE=32768
WS_ENABLE_AUTH=false
WS_ALLOWED_ORIGINS=*

# ================================================================
# CIRCUIT BREAKER & RELIABILITY
# ================================================================

# Circuit Breaker Configuration (prevents cascade failures)
MCP_MEMORY_CIRCUIT_BREAKER_ENABLED=true
CIRCUIT_BREAKER_ENABLED=true          # Fallback variable name
USE_CIRCUIT_BREAKER=true              # Alternative variable name

# ================================================================
# CLI CONFIGURATION
# ================================================================

# CLI Configuration Directory
LMMC_CONFIG_DIR=~/.config/lmmc

# ================================================================
# TESTING CONFIGURATION
# ================================================================

# Test Database Configuration
TEST_DATABASE_URL=postgresql://test:test@localhost:5433/test_db
TEST_OPENAI_API_KEY=test_key

# Test Execution Flags
RUN_E2E_TESTS=false
RUN_INTEGRATION_TESTS=false
RUN_PERF_TESTS=false

# ================================================================
# BUILD & RUNTIME CONFIGURATION
# ================================================================

# Application Version & Build Info
APP_VERSION=dev

# OpenAPI Documentation Server
OPENAPI_PORT=8080
OPENAPI_SPEC_PATH=/api/docs

# Output Format for CLI tools
OUTPUT_JSON=false

# ================================================================
# DOCKER COMPOSE OVERRIDES
# ================================================================
# These variables are used in docker-compose.yml for container orchestration
# They override the internal application configuration when running in Docker

# Port Mappings (host:container)
MCP_HOST_PORT=9080                    # Host port for MCP server
MCP_HEALTH_PORT=9081                  # Host port for health checks  
MCP_METRICS_PORT=9082                 # Host port for metrics
QDRANT_HOST_PORT=6333                 # Host port for Qdrant HTTP
QDRANT_GRPC_PORT=6334                 # Host port for Qdrant gRPC

# Container Health Checks
HEALTH_CHECK_INTERVAL=30s
HEALTH_CHECK_TIMEOUT=10s
HEALTH_CHECK_RETRIES=3

# Container-specific overrides
MCP_MEMORY_CORS_ENABLED=true
MCP_MEMORY_CORS_ORIGINS=http://localhost:*,https://localhost:*
MCP_MEMORY_ENCRYPTION_ENABLED=true
MCP_MEMORY_EMBEDDING_DIMENSION=1536
QDRANT_COLLECTION=claude_memory
LOG_FORMAT=json

# Protocol Support Flags (for future implementation)
MCP_STDIO_ENABLED=true
MCP_HTTP_ENABLED=true
MCP_WS_ENABLED=true
MCP_SSE_ENABLED=true

# Database Configuration for Containers
MCP_MEMORY_DB_TYPE=sqlite
SQLITE_DB_PATH=/app/data/memory.db

# Performance Settings (for future implementation)
MCP_MEMORY_MAX_CONNECTIONS=10
MCP_MEMORY_CONNECTION_TIMEOUT_SECONDS=30
MCP_MEMORY_QUERY_TIMEOUT_SECONDS=60

# ================================================================
# ENVIRONMENT-SPECIFIC OVERRIDES
# ================================================================

# Development Environment - Uncomment for local development
# MCP_MEMORY_LOG_LEVEL=debug
# MCP_MEMORY_CORS_ORIGINS=*
# MCP_MEMORY_ENCRYPTION_ENABLED=false
# MCP_MEMORY_BACKUP_ENABLED=false
# WS_ALLOWED_ORIGINS=*

# Production Environment - Uncomment for production deployment  
# MCP_MEMORY_LOG_LEVEL=warn
# MCP_MEMORY_CORS_ORIGINS=https://yourdomain.com
# MCP_MEMORY_ENCRYPTION_ENABLED=true
# MCP_MEMORY_BACKUP_ENABLED=true
# WS_ENABLE_AUTH=true
# WS_ALLOWED_ORIGINS=https://yourdomain.com

# ================================================================
# NOTES
# ================================================================

# Variables marked as "for future implementation" are used in docker-compose.yml
# but may not be fully implemented in the Go application code yet.
# This represents planned features and Docker configuration compatibility.

# System environment variables that may be used automatically:
# - HOME, USER, XDG_CONFIG_HOME (for CLI configuration paths)
# - CI (for detecting continuous integration environments)

# For comprehensive logging and debugging, set:
# MCP_MEMORY_LOG_LEVEL=debug
# MCP_MEMORY_LOG_FORMAT=json
# OUTPUT_JSON=true