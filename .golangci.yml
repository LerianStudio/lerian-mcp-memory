# golangci-lint configuration
# https://golangci-lint.run/usage/configuration/

version: "2"

run:
  # Timeout for analysis
  timeout: 5m
  
  # Exit code when at least one issue was found
  issues-exit-code: 1
  
  # Include test files
  tests: true
  
  # List of build tags
  build-tags:
    - integration
    - e2e
  
  # Exclude directories and files
  exclude-dirs:
    - vendor
    - third_party
    - testdata
    - examples
    - bin
    - scripts
  
  # Exclude files
  exclude-files:
    - ".*\\.pb\\.go$"
    - ".*\\.gen\\.go$"
    - "mock_.*\\.go$"

output:
  # Format of output: colored-line-number|line-number|json|tab|checkstyle|code-climate
  format: colored-line-number
  
  # Print linter name in the end of issue text
  print-linter-name: true
  
  # Sort results by: filepath, line and column
  sort-results: true

linters:
  # Enable specific linters
  enable:
    # Default linters
    - errcheck
    - gosimple
    - govet
    - ineffassign
    - staticcheck
    - typecheck
    - unused
    
    # Additional linters
    - bodyclose
    - contextcheck
    - cyclop
    - dogsled
    - dupl
    - durationcheck
    - errorlint
    - exhaustive
    - exportloopref
    - forbidigo
    - funlen
    - gci
    - gochecknoglobals
    - gochecknoinits
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    - godot
    - godox
    - gofmt
    - gofumpt
    - goheader
    - goimports
    - gomoddirectives
    - gomodguard
    - goprintffuncname
    - gosec
    - grouper
    - importas
    - lll
    - loggercheck
    - maintidx
    - makezero
    - misspell
    - nakedret
    - nestif
    - nilerr
    - nilnil
    - nlreturn
    - noctx
    - nolintlint
    - paralleltest
    - prealloc
    - predeclared
    - promlinter
    - revive
    - rowserrcheck
    - sqlclosecheck
    - stylecheck
    - tagliatelle
    - tenv
    - testableexamples
    - testpackage
    - thelper
    - tparallel
    - unconvert
    - unparam
    - usestdlibvars
    - wastedassign
    - whitespace
    - wrapcheck
    - wsl

  # Disable specific linters
  disable:
    - deadcode
    - exhaustivestruct
    - golint
    - ifshort
    - interfacer
    - maligned
    - nosnakecase
    - scopelint
    - structcheck
    - varcheck

linters-settings:
  # errcheck
  errcheck:
    check-type-assertions: true
    check-blank: true
    exclude-functions:
      - io.Copy
      - io.Close
      - os.RemoveAll
  
  # govet
  govet:
    check-shadowing: true
    enable-all: true
  
  # gofmt
  gofmt:
    simplify: true
  
  # goimports
  goimports:
    local-prefixes: mcp-memory
  
  # gocyclo
  gocyclo:
    min-complexity: 15
  
  # dupl
  dupl:
    threshold: 150
  
  # funlen
  funlen:
    lines: 100
    statements: 50
  
  # goconst
  goconst:
    min-len: 3
    min-occurrences: 3
  
  # misspell
  misspell:
    locale: US
  
  # lll
  lll:
    line-length: 120
    tab-width: 1
  
  # nakedret
  nakedret:
    max-func-lines: 30
  
  # gocritic
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - dupImport
      - ifElseChain
      - octalLiteral
      - whyNoLint
      - wrapperFunc
  
  # gocognit
  gocognit:
    min-complexity: 20
  
  # nestif
  nestif:
    min-complexity: 4
  
  # godot
  godot:
    scope: declarations
    capital: false
  
  # godox
  godox:
    keywords:
      - TODO
      - FIXME
      - HACK
      - BUG
      - OPTIMIZE
      - XXX
  
  # dogsled
  dogsled:
    max-blank-identifiers: 2
  
  # whitespace
  whitespace:
    multi-if: false
    multi-func: false
  
  # wsl
  wsl:
    # See https://github.com/bombsimon/wsl/blob/master/doc/configuration.md for documentation of available settings
    allow-separated-leading-comment: false
    allow-trailing-comment: false
    force-case-trailing-whitespace: 0
  
  # gofumpt
  gofumpt:
    extra-rules: true
  
  # errorlint
  errorlint:
    errorf: true
    errorf-multi: true
    asserts: true
    comparison: true
  
  # thelper
  thelper:
    test:
      first: true
      name: true
      begin: true
    benchmark:
      first: true
      name: true
      begin: true
  
  # exhaustive
  exhaustive:
    check-generated: false
    default-signifies-exhaustive: false
    ignore-enum-members: ""
    package-scope-only: false
  
  # tagliatelle
  tagliatelle:
    case:
      use-field-name: true
      rules:
        json: camel
        yaml: camel
        xml: camel
        bson: camel
        avro: snake
        mapstructure: kebab
  
  # revive
  revive:
    ignore-generated-header: true
    severity: warning
    confidence: 0.8
    error-code: 0
    warning-code: 0
    rules:
      - name: blank-imports
      - name: context-as-argument
      - name: context-keys-type
      - name: dot-imports
      - name: error-return
      - name: error-strings
      - name: error-naming
      - name: exported
      - name: if-return
      - name: increment-decrement
      - name: var-naming
      - name: var-declaration
      - name: package-comments
      - name: range
      - name: receiver-naming
      - name: time-naming
      - name: unexported-return
      - name: indent-error-flow
      - name: errorf
      - name: empty-block
      - name: superfluous-else
      - name: unreachable-code
      - name: redefines-builtin-id

issues:
  # Maximum count of issues with the same text
  max-same-issues: 0
  
  # List of regexps of issue texts to exclude
  exclude:
    - "Error return value of .((os\\.)?std(out|err)\\..*|.*Close|.*Flush|os\\.Remove(All)?|.*printf?|os\\.(Un)?Setenv). is not checked"
    - "exported (type|method|function) (.+) should have comment or be unexported"
    - "ST1000: at least one file in a package should have a package comment"
  
  # Exclude configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    # Exclude some linters from running on tests files
    - path: _test\.go
      linters:
        - gocyclo
        - errcheck
        - dupl
        - gosec
        - funlen
        - gocognit
        - gochecknoinits
        - gochecknoglobals
    
    # Exclude known linters from partially hard-vendored code
    - path: internal/pkg/
      linters:
        - dupl
        - lll
    
    # Exclude lll issues for long lines with go:generate
    - linters:
        - lll
      source: "^//go:generate "
    
    # Exclude some staticcheck messages
    - linters:
        - staticcheck
      text: "SA9003:"
    
    # Exclude some gosec messages
    - linters:
        - gosec
      text: "G104:"
      path: _test\.go
    
    # Exclude some gocritic messages
    - linters:
        - gocritic
      text: "unnecessaryDefer:"
  
  # Independently from option `exclude` we use default exclude patterns
  exclude-use-default: false
  
  # Maximum issues count per one linter
  max-issues-per-linter: 0
  
  # Show only new issues
  new: false
  
  # Fix found issues (if it's supported by the linter)
  fix: false

severity:
  # Default value is empty string.
  # Set the default severity for issues.
  default-severity: error
  
  # When a list of severity rules are provided, severity information will be added to lint
  # issues. Severity rules have the same filtering capability as exclude rules.
  rules:
    - linters:
        - dupl
      severity: info