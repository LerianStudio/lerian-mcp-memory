# https://golangci-lint.run/usage/configuration/#config-file
version: 2

run:
  timeout: 5m
  issues-exit-code: 1
  tests: true
  build-tags:
    - integration
    - e2e
  # Optimize for faster execution in CI
  concurrency: 4
  allow-parallel-runners: true

linters:
  # Disable default linters to have explicit control
  disable-all: true
  enable:
    # Core linters - these catch real bugs
    - errcheck
    - govet
    - ineffassign
    - staticcheck
    - unused
    
    # Important quality linters
    - bodyclose
    - contextcheck
    - dupl
    - durationcheck
    - errorlint
    - exhaustive
    - gosec
    - misspell
    - nilnil
    - prealloc
    - unconvert
    - unparam
    
    # Reasonable style linters
    - goconst
    - gocritic
    - gocyclo
    - nestif
    
    # Additional v2 linters for better code quality
    # - revive  # Temporarily disabled due to overly strict rules
    - whitespace

linters-settings:
  dupl:
    threshold: 200  # Increase threshold for duplicate detection
  
  gocyclo:
    min-complexity: 15  # Reasonable complexity threshold
  
  nestif:
    min-complexity: 4  # Avoid deeply nested if statements
  
  gocritic:
    enabled-tags:
      - diagnostic
      - style
      - performance
    disabled-checks:
      - unnamedResult  # Allow unnamed results for simple functions
      - hugeParam     # Allow large parameters for configuration structs
  
  revive:
    rules:
      - name: exported
        disabled: true  # Too strict for internal packages
      - name: package-comments
        disabled: true  # Not requiring package comments for internal packages  
      - name: blank-imports
        disabled: false
      - name: unused-parameter
        disabled: true  # Too strict for interface implementations
      - name: redefines-builtin-id
        disabled: true  # Allow common names like min, max, copy
      - name: comment-spacings
        disabled: true  # Allow flexible comment formatting
      - name: stutters
        disabled: true  # Allow type names that may "stutter" in certain contexts
  
  gosec:
    excludes:
      - G304  # File path from variable - we handle this appropriately in audit logger
    confidence: medium
    severity: medium

issues:
  max-same-issues: 0
  max-issues-per-linter: 0
  new: false
  fix: false
  exclude-rules:
    # Exclude errcheck for test files - test code has different requirements
    - path: "_test\\.go"
      linters:
        - errcheck
    # Exclude unused warnings for mock methods and interfaces
    - path: "_test\\.go"
      linters:
        - unused
    # Exclude dupl linter for builtin_patterns.go as it has intentionally similar patterns
    - path: internal/intelligence/builtin_patterns.go
      linters:
        - dupl
    # Exclude gosec G304 for audit logger as paths are sanitized
    - path: internal/audit/audit_logger.go
      linters:
        - gosec
      text: "G304"
    # Exclude max function redeclaration
    - path: internal/analytics/memory_analytics.go
      linters:
        - predeclared
      text: "function max has same name as predeclared identifier"
    # Exclude min function redeclaration
    - path: internal/analytics/memory_analytics.go
      linters:
        - predeclared
      text: "function min has same name as predeclared identifier"
    # Exclude unused warnings for performance monitoring structures
    - path: internal/performance/
      linters:
        - unused
    # Exclude unused warnings for monitoring interfaces (used later)
    - path: internal/monitoring/
      linters:
        - unused
    # Exclude errcheck for container tests (test environment setup)
    - path: internal/di/container_test.go
      linters:
        - errcheck
    # Exclude errcheck for all test files - test environment setup doesn't require error checking
    - path: "_test\\.go"
      linters:
        - errcheck
    # Exclude unused parameters for interfaces and test files
    - linters:
        - unparam
        - unused
      text: "is unused"
