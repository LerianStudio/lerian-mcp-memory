# Production Environment Configuration for MCP Memory Server
# Copy this file to .env.production and fill in the actual values

# =============================================================================
# CORE APPLICATION SETTINGS
# =============================================================================

# Server Configuration
MCP_MEMORY_HOST=0.0.0.0
MCP_HOST_PORT=9080
MCP_MEMORY_LOG_LEVEL=info
MCP_MEMORY_ENV=production

# Data Paths
DATA_PATH=/opt/mcp-memory/data

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL Database
POSTGRES_DB=mcp_memory_prod
POSTGRES_USER=mcp_user_prod
POSTGRES_PASSWORD=CHANGE_ME_STRONG_PASSWORD_HERE
POSTGRES_HOST=postgres
POSTGRES_PORT=5432

# Database Performance
DB_MAX_CONNECTIONS=25
DB_MAX_IDLE_CONNECTIONS=5
DB_CONNECTION_MAX_LIFETIME=5m
DB_CONNECTION_MAX_IDLE_TIME=1m

# =============================================================================
# VECTOR DATABASE CONFIGURATION
# =============================================================================

# Qdrant Vector Database
QDRANT_HOST_PORT=6333
QDRANT_GRPC_PORT=6334
QDRANT_API_KEY=CHANGE_ME_QDRANT_API_KEY
QDRANT_LOG_LEVEL=INFO
MCP_MEMORY_VECTOR_DIM=1536

# =============================================================================
# AI SERVICE CONFIGURATION
# =============================================================================

# OpenAI Configuration
OPENAI_API_KEY=sk-CHANGE_ME_OPENAI_API_KEY
OPENAI_MODEL=text-embedding-ada-002
OPENAI_MAX_RETRIES=3
OPENAI_TIMEOUT=30s

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# JWT Configuration
JWT_SECRET=CHANGE_ME_VERY_LONG_RANDOM_JWT_SECRET_256_BITS
API_KEY_SALT=CHANGE_ME_RANDOM_SALT_FOR_API_KEYS
ENCRYPTION_KEY=CHANGE_ME_32_BYTE_ENCRYPTION_KEY_HERE

# Redis Cache (optional)
REDIS_PASSWORD=CHANGE_ME_REDIS_PASSWORD

# =============================================================================
# NETWORKING CONFIGURATION
# =============================================================================

# Port Mappings
NGINX_HTTP_PORT=80
NGINX_HTTPS_PORT=443

# =============================================================================
# MONITORING CONFIGURATION
# =============================================================================

# Metrics and Monitoring
ENABLE_METRICS=true
PROMETHEUS_PORT=9090
GRAFANA_PORT=3000
ALERTMANAGER_PORT=9093

# Grafana Configuration
GRAFANA_ADMIN_USER=admin
GRAFANA_ADMIN_PASSWORD=CHANGE_ME_GRAFANA_PASSWORD

# Prometheus Configuration
PROMETHEUS_RETENTION_TIME=30d
PROMETHEUS_RETENTION_SIZE=10GB
PROMETHEUS_LOG_LEVEL=info

# AlertManager Configuration
ALERTMANAGER_LOG_LEVEL=info

# Monitoring Exporters
NODE_EXPORTER_PORT=9100
CADVISOR_PORT=8080
POSTGRES_EXPORTER_PORT=9187

# Log Aggregation
LOKI_PORT=3100
LOKI_LOG_LEVEL=info
PROMTAIL_LOG_LEVEL=info

# Distributed Tracing
JAEGER_UI_PORT=16686
JAEGER_COLLECTOR_PORT=14268
JAEGER_AGENT_PORT=6831
JAEGER_LOG_LEVEL=info

# =============================================================================
# PERFORMANCE CONFIGURATION
# =============================================================================

# Memory Management
MEMORY_CHUNK_SIZE=2048
SIMILARITY_THRESHOLD=0.7
CACHE_TTL=300s
MAX_CONCURRENT_REQUESTS=100

# Health Checks
HEALTH_CHECK_INTERVAL=30s

# =============================================================================
# BACKUP CONFIGURATION
# =============================================================================

# Backup Settings
BACKUP_S3_BUCKET=my-mcp-memory-backups
BACKUP_S3_REGION=us-west-2
BACKUP_RETENTION_DAYS=30

# AWS Credentials (for S3 backups)
AWS_ACCESS_KEY_ID=CHANGE_ME_AWS_ACCESS_KEY
AWS_SECRET_ACCESS_KEY=CHANGE_ME_AWS_SECRET_KEY
AWS_REGION=us-west-2
AWS_AZ=us-west-2a

# =============================================================================
# NOTIFICATION CONFIGURATION
# =============================================================================

# Webhook for alerts
WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK

# Email notifications
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=alerts@yourdomain.com
SMTP_PASSWORD=CHANGE_ME_SMTP_PASSWORD
ALERT_EMAIL_TO=admin@yourdomain.com

# =============================================================================
# SSL/TLS CONFIGURATION
# =============================================================================

# SSL Certificates
SSL_CERT_PATH=/opt/mcp-memory/ssl/server.crt
SSL_KEY_PATH=/opt/mcp-memory/ssl/server.key
SSL_CA_PATH=/opt/mcp-memory/ssl/ca.crt

# =============================================================================
# DEVELOPMENT/DEBUGGING (Production: set to false)
# =============================================================================

# Debug Settings (DISABLE IN PRODUCTION)
DEBUG=false
ENABLE_PPROF=false
LOG_SQL_QUERIES=false

# =============================================================================
# DOCKER COMPOSE OVERRIDES
# =============================================================================

# Docker Compose Project Name
COMPOSE_PROJECT_NAME=lerian-mcp-memory

# Image Tags
MCP_MEMORY_IMAGE_TAG=latest

# =============================================================================
# ENVIRONMENT VALIDATION
# =============================================================================

# Environment Validation
REQUIRED_SECRETS_CHECK=true
ENVIRONMENT_NAME=production

# =============================================================================
# CUSTOM APPLICATION SETTINGS
# =============================================================================

# Rate Limiting
RATE_LIMIT_REQUESTS_PER_MINUTE=1000
RATE_LIMIT_BURST=100

# CORS Configuration
CORS_ALLOWED_ORIGINS=https://app.yourdomain.com,https://dashboard.yourdomain.com
CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS
CORS_ALLOWED_HEADERS=Authorization,Content-Type,X-API-Key

# Feature Flags
FEATURE_ADVANCED_ANALYTICS=true
FEATURE_MEMORY_COMPRESSION=true
FEATURE_DISTRIBUTED_CACHING=true
FEATURE_AUTO_SCALING=false
FEATURE_REAL_TIME_SYNC=true

# =============================================================================
# NOTES FOR PRODUCTION DEPLOYMENT
# =============================================================================

# IMPORTANT SECURITY NOTES:
# 1. Change ALL "CHANGE_ME_*" values to strong, unique secrets
# 2. Use a proper secret management system (HashiCorp Vault, AWS Secrets Manager, etc.)
# 3. Ensure this file has restricted permissions (600) in production
# 4. Never commit this file to version control
# 5. Use strong passwords with at least 32 characters for secrets
# 6. Enable SSL/TLS in production
# 7. Configure firewall rules to restrict access
# 8. Set up proper monitoring and alerting
# 9. Configure log aggregation for security auditing
# 10. Regularly rotate secrets and API keys

# PERFORMANCE NOTES:
# 1. Adjust connection pool sizes based on your workload
# 2. Monitor resource usage and adjust limits accordingly
# 3. Consider using a CDN for static assets
# 4. Set up database read replicas for high availability
# 5. Configure proper backup and disaster recovery procedures

# MONITORING NOTES:
# 1. Set up proper alerting rules in Prometheus
# 2. Configure Grafana dashboards for visualization
# 3. Set up log aggregation and analysis
# 4. Monitor key business metrics
# 5. Set up uptime monitoring from external services