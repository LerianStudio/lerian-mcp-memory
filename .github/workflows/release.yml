name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Get tag
        id: tag
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build binaries
        run: |
          cd cli
          mkdir -p ../dist
          
          # Build flags
          LDFLAGS="-s -w -X main.version=${{ steps.tag.outputs.tag }} -X main.buildTime=$(date -u +%Y-%m-%dT%H:%M:%SZ)"
          
          # Cross-compile for multiple platforms
          declare -a platforms=(
            "darwin/amd64"
            "darwin/arm64"
            "linux/amd64" 
            "linux/arm64"
            "windows/amd64"
          )
          
          for platform in "${platforms[@]}"; do
            IFS='/' read -r GOOS GOARCH <<< "$platform"
            
            output_name="lmmc"
            if [ "$GOOS" = "windows" ]; then
              output_name="lmmc.exe"
            fi
            
            archive_name="lmmc-${{ steps.tag.outputs.tag }}-$GOOS-$GOARCH"
            
            echo "Building $GOOS/$GOARCH..."
            env GOOS="$GOOS" GOARCH="$GOARCH" CGO_ENABLED=0 \
              go build -ldflags="$LDFLAGS" -o "../dist/$output_name" ./cmd/lmmc
            
            # Create archive
            cd ../dist
            if [ "$GOOS" = "windows" ]; then
              zip "${archive_name}.zip" "$output_name"
            else
              tar -czf "${archive_name}.tar.gz" "$output_name"
            fi
            rm "$output_name"
            cd ../cli
          done

      - name: Generate checksums
        run: |
          cd dist
          sha256sum * > checksums.txt

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: lmmc ${{ steps.tag.outputs.tag }}
          body: |
            # lmmc ${{ steps.tag.outputs.tag }}
            
            ## ðŸŽ‰ Features
            
            ### Terminal User Interface (TUI)
            - **Multi-View Dashboard**: Interactive terminal interface with 6 comprehensive views
            - **Real-Time Analytics**: Cross-repository performance monitoring and insights  
            - **Pattern Visualization**: Workflow analysis with ASCII charts and success metrics
            - **Multi-Repository Intelligence**: Centralized dashboard for all projects
            
            ### Core Functionality
            - **AI-Powered Task Management**: Intelligent task suggestions and automation
            - **Cross-Repository Analysis**: Pattern detection and similarity scoring
            - **Document Generation**: Interactive PRD/TRD creation with AI assistance
            - **Real-Time Sync**: Bidirectional synchronization with conflict resolution
            
            ## ðŸ“¦ Installation
            
            ### Quick Install (macOS/Linux)
            ```bash
            curl -fsSL https://raw.githubusercontent.com/lerianstudio/lerian-mcp-memory/main/scripts/install.sh | bash
            ```
            
            ### Manual Installation
            Download the appropriate binary for your platform from the assets below.
            
            ## ðŸš€ Quick Start
            
            ```bash
            # Start the interactive TUI dashboard
            lmmc tui
            
            # Traditional CLI usage
            lmmc add "Implement new feature"
            lmmc list
            ```
          files: |
            dist/*.tar.gz
            dist/*.zip
            dist/checksums.txt
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
EOF < /dev/null