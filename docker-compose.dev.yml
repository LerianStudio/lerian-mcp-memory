# Development Docker Compose - Fast iteration setup
# Backend in Docker, Frontend can run locally for hot reload

services:
  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: lerian-mcp-qdrant-dev
    restart: unless-stopped
    ports:
      - "6333:6333"  # HTTP API
      - "6334:6334"  # gRPC API
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
      - QDRANT__STORAGE__STORAGE_PATH=/qdrant/storage
      - QDRANT__CLUSTER__ENABLED=false
    volumes:
      - qdrant_data_dev:/qdrant/storage
    networks:
      - lerian_mcp_dev_network
    # healthcheck:
    #   test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:6333/ || exit 1"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 10s

  # MCP Memory Server (Backend)
  lerian-mcp-memory:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: lerian-mcp-memory-backend-dev
    restart: unless-stopped
    depends_on:
      - qdrant
    ports:
      - "9080:9080"    # MCP API port
      - "9081:8081"    # Health check port
      - "9082:8082"    # Metrics port
    environment:
      # Core configuration
      - MCP_MEMORY_DATA_DIR=/app/data
      - MCP_MEMORY_CONFIG_DIR=/app/config
      - MCP_MEMORY_LOG_LEVEL=debug  # More verbose logging for dev
      - MCP_MEMORY_HTTP_PORT=9080
      - MCP_MEMORY_HEALTH_PORT=8081
      - MCP_MEMORY_METRICS_PORT=8082
      
      # Qdrant configuration
      - MCP_MEMORY_STORAGE_PROVIDER=qdrant
      - MCP_MEMORY_QDRANT_HOST=qdrant
      - MCP_MEMORY_QDRANT_PORT=6334
      - MCP_MEMORY_QDRANT_COLLECTION=claude_memory_dev
      - MCP_MEMORY_VECTOR_DIM=1536
      
      # Database
      - MCP_MEMORY_DB_TYPE=sqlite
      - MCP_MEMORY_DB_PATH=/app/data/memory_dev.db
      
      # Security (relaxed for development)
      - MCP_MEMORY_ENCRYPTION_ENABLED=false
      - MCP_MEMORY_BACKUP_ENABLED=true
      - MCP_MEMORY_BACKUP_INTERVAL=1h
      - MCP_MEMORY_ACCESS_CONTROL_ENABLED=false
      
      # OpenAI API
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      
      # CORS for frontend development
      - MCP_MEMORY_CORS_ENABLED=true
      - MCP_MEMORY_CORS_ORIGINS=http://localhost:2001,http://localhost:2002,http://localhost:3000
      
    volumes:
      - mcp_data_dev:/app/data
      - mcp_logs_dev:/app/logs
      - mcp_backups_dev:/app/backups
      # Optional: Mount source code for hot reload (if supported)
      # - .:/src:ro
    networks:
      - lerian_mcp_dev_network

# Networks
networks:
  lerian_mcp_dev_network:
    driver: bridge

# Development volumes (separate from production)
volumes:
  qdrant_data_dev:
    driver: local
    name: mcp_memory_qdrant_dev
  mcp_data_dev:
    driver: local
    name: mcp_memory_data_dev
  mcp_logs_dev:
    driver: local
    name: mcp_memory_logs_dev
  mcp_backups_dev:
    driver: local
    name: mcp_memory_backups_dev